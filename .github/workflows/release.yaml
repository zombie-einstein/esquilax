name: build-and-release

on:
  workflow_dispatch

jobs:
  check_main:
    runs-on: ubuntu-latest
    steps:
      - name: Release from main
        if: github.ref == 'refs/heads/main'
        run: echo '::notice ::Building and uploading release'
      - name: No release
        if: github.ref != 'refs/heads/main'
        run: echo '::warning ::Release can only be run from the main branch!' && exit 1

  build_docs:
    runs-on: ubuntu-latest
    needs: [check_main]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Build docs
        run: task docs
      - name: Upload to Github pages
        uses: actions/upload-pages-artifact@v3.0.0
        with:
          path: docs/build

  build_package:
    runs-on: ubuntu-latest
    needs: [ check_main ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: false
          installer-parallel: true
      - name: Build package
        run: poetry build
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release_python:
    runs-on: ubuntu-latest
    needs: [build_docs, build_package]
    environment:
      name: pypi
      url: https://pypi.org/p/esquilax
    permissions:
      id-token: write
    steps:
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.14

  publish_docs:
    runs-on: ubuntu-latest
    needs: [build_docs, build_package]
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
